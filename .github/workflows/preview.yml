# Deploy PR previews to GitHub Pages
name: Deploy PR Preview

on:
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened, closed]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write
  pull-requests: write

jobs:
  build-preview:
    if: github.event.action != 'closed'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9
          
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: pnpm
          
      - name: Install dependencies
        run: pnpm install
        
      - name: Build with VitePress
        run: pnpm docs:build
        
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: .vitepress/dist
          destination_dir: pr-${{ github.event.number }}
          
      - name: Comment PR
        uses: actions/github-script@v6
        with:
          script: |
            const prNumber = context.payload.pull_request.number;
            const previewUrl = `https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/pr-${prNumber}/`;
            
            // Check if we've already commented on this PR
            const comments = await github.rest.issues.listComments({
              issue_number: prNumber,
              owner: context.repo.owner,
              repo: context.repo.repo,
            });
            
            const botComment = comments.data.find(comment => 
              comment.user.type === 'Bot' && comment.body.includes('ðŸš€ Preview Deployed')
            );
            
            const commentBody = `## ðŸš€ Preview Deployed
              
            Your changes have been deployed to a preview environment:
            
            **Preview URL:** ${previewUrl}
            
            The preview will be updated automatically when you push new commits to this PR.`;
            
            if (botComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                comment_id: botComment.id,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: commentBody
              });
            } else {
              // Create new comment
              await github.rest.issues.createComment({
                issue_number: prNumber,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: commentBody
              });
            }

  cleanup-preview:
    if: github.event.action == 'closed'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout gh-pages
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Remove preview directory
        run: |
          if [ -d "pr-${{ github.event.number }}" ]; then
            git config user.name github-actions
            git config user.email github-actions@github.com
            rm -rf pr-${{ github.event.number }}
            git add .
            git commit -m "Remove preview for PR #${{ github.event.number }}" || echo "Nothing to commit"
            git push
          fi
          
      - name: Comment PR cleanup
        uses: actions/github-script@v6
        with:
          script: |
            const prNumber = context.payload.pull_request.number;
            
            github.rest.issues.createComment({
              issue_number: prNumber,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## ðŸ§¹ Preview Cleaned Up
              
              The preview environment for this PR has been removed.`
            });